{"version":3,"sources":["components/CharInfo.js","components/Rolls.js","dice.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["CharInfo","props","state","rolled","level","class","generation","handleLevel","bind","handleClass","handleGenerationMethod","handleSubmit","event","this","target","value","forceUpdate","console","error","onClick","preventDefault","button","cls_name","isMobile","className","onSubmit","htmlFor","type","min","max","onChange","id","Component","Rolls","keys","tooltips","rolls","sum","dice","health","ability_rolls","i","stat_tooltip","rolls_tooltip","Array","prototype","join","call","push","toLowerCase","d","Math","ceil","random","threeDSix","log","reduce","a","b","arrSum","fourDSixDropLowest","min_idx","roll","dropped","splice","Layout","handleWindowSizeChange","setState","width","window","innerWidth","stats","updateState","addEventListener","removeEventListener","s","gen","rollStats","c","includes","rollHealth","clsName","cls","App","document","title","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44fd7724.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass CharInfo extends Component {\n     constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.rolled = false;\n        this.level = 1;\n        this.class = \"Artificer\";\n        this.generation = \"3d6\";\n    \n        this.handleLevel = this.handleLevel.bind(this);\n        this.handleClass = this.handleClass.bind(this);\n        this.handleGenerationMethod = this.handleGenerationMethod.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n\n    handleLevel(event) {\n        this.level = event.target.value;\n        this.forceUpdate()\n    }\n\n    handleClass(event) {\n        if (event.target.value === \"Class\"){\n            this.class = null;\n        } else {\n            this.class = event.target.value;\n        }\n        this.forceUpdate();\n    }\n\n    handleGenerationMethod(event) {\n        if (event.target.value === \"Generation Method\"){\n            this.generation = null;\n        } else{\n            this.generation = event.target.value;    \n        }\n        this.forceUpdate();\n    }\n    \n    handleSubmit(event) {\n        if (this.class === null || this.class === null){\n            console.error(\"Please choose class and generation method before you proceed\")\n        } else {\n        this.rolled = true;\n        this.props.onClick({rolled: this.rolled,\n                            level: this.level,\n                            class: this.class,\n                            generation: this.generation});\n        }\n        event.preventDefault();\n    }\n    \n      render() {\n          var button = '';\n        if (this.class !== null && this.generation !== null){\n            button = 'button-active'\n        } else {\n            button = 'button-inactive'\n        }\n        const cls_name = this.props.isMobile ? \"mobile-input-box\" : \"input-box\"\n        return (\n          <div className={cls_name}>\n            <form className=\"character-form\" onSubmit={this.handleSubmit}>\n                <label className=\"lb-label\" htmlFor=\"lb\" >Level:</label> \n                <input className=\"levelbox\" type=\"number\" min=\"1\" max=\"20\" value={this.level} onChange={this.handleLevel} id=\"lb\"/>\n                <select className=\"dropdown-class\" onChange={this.handleClass}>\n                    <option>Artificer</option>\n                    <option>Blood Hunter</option>\n                    <option>Barbarian</option>\n                    <option>Bard</option>\n                    <option>Cleric</option>\n                    <option>Druid</option>\n                    <option>Fighter</option>\n                    <option>Monk</option>\n                    <option>Paladin</option>\n                    <option>Ranger</option>\n                    <option>Rogue</option>\n                    <option>Warlock</option>\n                    <option>Wizard</option>\n                </select>\n                <select className=\"dropdown-generation-method\" onChange={this.handleGenerationMethod}>\n                    <option>3d6</option>\n                    <option>4d6</option>\n                    <option>CR</option>\n                </select>\n                <input className={button} type=\"submit\" value=\"Roll\" />\n            </form>\n          </div>\n        );\n    }\n}\n\n\nexport default CharInfo;","import React, { Component } from 'react';\n\nclass Rolls extends Component {\n    constructor(props) {\n        super(props);\n        this.keys = [\"STR\", \"DEX\", \"CON\", \"INT\", \"WIS\", \"CHA\", \"HEALTH\"]\n        this.tooltips = [\"Strength\",\n                         \"Dexterity\",\n                         \"Constitution\",\n                         \"Intelligence\",\n                         \"Wisdom\",\n                         \"Charisma\",\n                         \"Health\"]\n\n        this.rolls = [{sum : \"--\", dice: \"--\"}, // STR\n                      {sum : \"--\", dice: \"--\"}, // DEX\n                      {sum : \"--\", dice: \"--\"}, // CON\n                      {sum : \"--\", dice: \"--\"}, // INT \n                      {sum : \"--\", dice: \"--\"}, // WIS\n                      {sum : \"--\", dice: \"--\"}]; // CHA\n        this.health = {sum : \"--\", dice: \"--\"};\n    }\n    render() {\n        if (this.props.rolled) {\n            this.rolls = this.props.rolls;\n            this.health = this.props.health;\n        }\n        const ability_rolls = []\n        for (var i = 0; i<6; i++){\n            if (!this.props.isMobile){\n                var stat_tooltip = <span className=\"tooltiptext\">{this.tooltips[i]}</span>\n                if (this.props.rolled){\n                    var rolls_tooltip = Array.prototype.join.call(this.rolls[i].dice, \", \")\n                } else {\n                    rolls_tooltip = \" -- \";\n                }\n                rolls_tooltip = <span className=\"tooltiptext\">{rolls_tooltip}</span>\n            }\n            ability_rolls.push(\n                <div className=\"stat-block\">\n                    <div className=\"stat\">\n                         {this.rolls[i].sum}\n                         {rolls_tooltip}\n                    </div>\n                    <div className={\"lab-\" + this.keys[i].toLowerCase()}>{this.keys[i]}\n                    {stat_tooltip}\n                    </div>\n                </div>\n            );\n        }   \n        if (!this.props.isMobile){\n            stat_tooltip = <span className=\"tooltiptext\">{this.tooltips[6]}</span>\n            if (this.props.rolled){    \n                rolls_tooltip = Array.prototype.join.call(this.health.dice, \", \")\n            }else{\n                rolls_tooltip = \" -- \";\n            }\n            rolls_tooltip = <span className=\"tooltiptext\">{rolls_tooltip}</span>\n        }\n        ability_rolls.push(\n            <div className=\"stat-block\">\n                <div className=\"stat\">{this.health.sum}\n                {rolls_tooltip}\n                </div>\n                <div className=\"lab-health\"> HP\n                {stat_tooltip}\n                </div>\n                \n            </div>\n        );\n        const cls_name = this.props.isMobile ? \"stats-mobile\" : \"stats\"\n        return (\n            <div className={cls_name}>\n                {ability_rolls}\n            </div>\n        );\n    }\n}\n\nexport default Rolls;","\nfunction dice(d){\n    \n    var outcome = Math.ceil(Math.random() * d);\n\n    return (outcome);\n}\n\nexport function rollStats(gen){\n    const arrSum = rolls => rolls.reduce((a,b) => a + b, 0)\n    var stats = [];\n\n    if (gen === '3d6'){\n        for (var i = 0; i < 6; i++){\n            stats.push(threeDSix());\n        }\n    }\n    else if (gen === '4d6'){\n        for (i = 0; i < 6; i++){\n            stats.push(fourDSixDropLowest());\n        }\n    }\n    else if (gen === 'CR'){\n        var sum = 0;\n        while (true){\n            for (i = 0; i < 6; i++){\n                stats.push(fourDSixDropLowest());\n                sum = sum + stats[i].sum\n            }\n            sum = arrSum(stats);\n            if (sum < 70){\n                stats = [];\n            } else {\n                break;\n            }\n        }\n    }\n    \n    return stats\n}\n\nfunction threeDSix(){\n    var rolls = [];\n    for (var i = 0; i < 3; i++){\n        rolls.push(dice(6));\n    }\n    console.log(\"Rolls: \" + rolls)\n    const arrSum = rolls => rolls.reduce((a,b) => a + b, 0)\n    const sum = arrSum(rolls);\n    console.log(\"Total sum: \" + sum)\n    console.log(\"=====================\")\n\n    return {sum: sum,\n            dice: rolls}\n}\n\nfunction fourDSixDropLowest(){\n    var rolls = [];\n    var min = 6;\n    var min_idx = 0;\n    for (var i = 0; i < 4; i++){\n        const roll = dice(6);\n        if (roll < min) {\n            min = roll;\n            min_idx = i;\n        }\n        rolls.push(roll);\n    }\n    console.log(\"Rolls: \" + rolls)\n    console.log(\"Dropped: \" + rolls[min_idx])\n    const dropped = rolls.splice(min_idx, 1);\n    const arrSum = rolls => rolls.reduce((a,b) => a + b, 0);\n    const sum = arrSum(rolls);\n    rolls.push(dropped);\n    console.log(\"Total sum: \" + sum)\n    console.log(\"=====================\")\n\n    return {sum: sum,\n            dice: rolls}\n}\n\nexport function rollHealth(c, level){\n    //d12\n    var health = [];\n    if ([\"Barbarian\"].includes(c)){\n        health.push(12);\n        for (var i = 0; i < level - 1; i++){\n            health.push(dice(12));\n        }\n    }\n    //d10\n    if ([\"Blood Hunter\", \"Fighter\", \"Paladin\", \"Ranger\"].includes(c)){\n        health.push(10);\n        for (i = 0; i < level - 1; i++){\n            health.push(dice(10));\n        }\n    }\n    //d8\n    if ([\"Artificer\", \"Bard\", \"Cleric\",\n         \"Druid\", \"Monk\", \"Rogue\", \"Warlock\"].includes(c)){\n            health.push(8);\n            for (i = 0; i < level - 1; i++){\n                health.push(dice(8));\n            }\n    }\n    //d6\n    if ([\"Sorcerer\", \"Wizard\"].includes(c)){\n        health.push(6);\n        for (i = 0; i < level - 1; i++){\n            health.push(dice(6));\n        }\n    }\n    const arrSum = rolls => rolls.reduce((a,b) => a + b, 0)\n    console.log(\"Rolled health\", health)\n    const sum = arrSum(health)\n    console.log(\"Total health\", health)\n    console.log(\"=====================\")\n\n    return {sum: sum,\n            dice: health}\n}\n","import React, { Component } from 'react';\nimport CharInfo from './CharInfo.js'\nimport Rolls from './Rolls.js'\nimport {rollStats, rollHealth} from '../dice.js'\n\nclass Layout extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            width: window.innerWidth,\n        };\n        this.rolled = false;\n        this.level = 1;\n        this.class = null;\n        this.generation = null;\n\n        this.stats = null;\n        this.health = null;\n\n        this.updateState = this.updateState.bind(this);\n    }\n    componentDidMount() {\n        window.addEventListener('resize', this.handleWindowSizeChange);\n    }\n        // make sure to remove the listener\n    // when the component is not mounted anymore\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleWindowSizeChange);\n    }\n    \n    handleWindowSizeChange = () => {\n        this.setState({ width: window.innerWidth });\n    };\n\n    \n    updateState(s){\n        this.rolled = s.rolled;\n        this.level = s.level;\n        this.class = s.class;\n        this.generation = s.generation;\n        this.stats = rollStats(this.generation);\n        this.health = rollHealth(this.class, this.level);\n        console.log(this.stats);\n        this.forceUpdate();\n    }\n    \n    render() {\n        const { width } = this.state;\n        const isMobile = width <= 600;\n        const clsName = isMobile ? \"layout-mobile\" : \"layout\";\n        return (\n            <div className={clsName}>\n                <Rolls rolled={this.rolled} level={this.level}\n                 cls={this.class} gen={this.generation}\n                 rolls={this.stats} health={this.health}\n                 isMobile={isMobile}/>\n                <CharInfo onClick={this.updateState}\n                 isMobile={isMobile}/>\n            </div>\n        );\n    }\n}\n\nexport default Layout;","import React from 'react';\nimport './App.css';\nimport Layout from './components/Layout.js'\n\n\n\nfunction App() {\n  document.title = \"Stat Roller\";\n  return (\n    <div className=\"container\">\n      <Layout/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}