{"version":3,"sources":["components/Ability.js","components/CharacterPanel.js","components/Layout.js","dice.js","AppState.js","App.js","serviceWorker.js","index.js"],"names":["Ability","props","id","className","draggable","onDragStart","e","dataTransfer","setData","target","onDragOver","preventDefault","onTouchEnd","roll","toUpperCase","CharacterPanel","state","rolls","appState","genMethod","swapAbilities","bind","drop","rollStats","handleMouseEnter","handleMouseLeave","handleTouchAbility","handleClickRollType","src","tgt","srcId","tgtId","tgtVal","this","srcVal","setRoll","setState","document","getElementById","getData","parentElement","style","top","getElementsByClassName","firstChild","textContent","activeAbility","currentTarget","abilities","key","push","onDrop","onMouseEnter","onMouseLeave","onClick","tabIndex","Component","Layout","dice","d","Math","ceil","random","threeDSix","i","sum","reduce","a","b","arrSum","oneDTwenty","fourDSixDropLowest","min","min_idx","dropped","splice","gen","stats","max_repeats","console","log","error","AppState","hasChanged","val","keys","Object","length","App","title","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.10ec8e45.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nfunction Ability (props) {    \n    function dragOver(e) {\n        e.preventDefault();\n    };\n    \n    function dragStart(e) {\n        e.dataTransfer.setData(\"src\", e.target.id);\n    };\n\n    return (\n        <div \n            id={props.id}\n            className={props.className}\n            draggable={props.draggable}\n            onDragStart={dragStart}\n            onDragOver={dragOver}\n            onTouchEnd={props.onTouchEnd}>\n                <p className=\"roll\">{props.roll}</p>\n                <p className=\"lab\">{props.id.toUpperCase()}</p>\n        </div>\n    );\n}\n\nexport default  Ability\n","import React, { Component } from 'react'\nimport Ability from './Ability.js'\n\nclass CharacterPanel extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            rolls: this.props.appState.rolls\n        }\n        this.genMethod = '4d6 Drop Lowest';\n\n        this.swapAbilities = this.swapAbilities.bind(this);\n        this.drop = this.drop.bind(this);\n        this.rollStats = this.rollStats.bind(this);\n        this.handleMouseEnter = this.handleMouseEnter.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n        this.handleTouchAbility = this.handleTouchAbility.bind(this);\n        this.handleClickRollType = this.handleClickRollType.bind(this);\n    }\n\n    swapAbilities(src, tgt) {\n        let srcId = src.id;\n        let tgtId = tgt.id;\n\n        let tgtVal = this.props.appState.rolls[tgtId];\n        let srcVal = this.props.appState.rolls[srcId];\n        this.props.appState.setRoll(tgtId, srcVal);\n        this.props.appState.setRoll(srcId, tgtVal);\n\n        this.setState({rolls: this.props.appState.rolls});\n    }\n\n    drop(e) {\n        e.preventDefault();\n        let src = document.getElementById(e.dataTransfer.getData(\"src\"));\n        let tgt = e.target.parentElement;\n\n        this.swapAbilities(src, tgt);\n    }\n\n    rollStats(e) {\n        this.props.appState.roll(this.genMethod);\n        this.setState(\n            {'rolls': this.props.appState.rolls}\n        );\n    }\n\n    handleMouseEnter(e) {\n        let element = document.getElementById(\"gradient\");\n        element.style.top = '30px';\n    }\n\n    handleMouseLeave(e) {\n        let element = document.getElementById(\"gradient\");\n        element.style.top = '';\n    }\n\n    handleClickRollType(e) {\n        document.getElementsByClassName(\"active\")[0].className = \"button\"\n        this.genMethod = e.target.firstChild.textContent;\n        e.target.className = \"botton active\";\n    }\n\n    handleTouchAbility(e){\n        e.preventDefault();\n        let activeAbility = document.getElementsByClassName(\"ability active\")[0];\n\n        if (activeAbility) {\n            // If we click the same element twice we dont want to do anything\n            if (e.currentTarget.id === activeAbility.id){\n                return;\n            }\n            activeAbility.className = \"ability\";\n        } else {\n            e.currentTarget.className = \"ability active\";\n            return;\n        }\n\n        this.swapAbilities(activeAbility, e.currentTarget);\n    }\n\n    render() {\n        let abilities = [];\n        \n        let rolls = this.props.appState.rolls\n\n        for (let key in rolls){\n            abilities.push(\n                <Ability id={key} key={key} className=\"ability\" draggable=\"true\" \n                roll={rolls[key]} appState={this.props.appState}\n                onTouchEnd={this.handleTouchAbility}/>\n            )\n        }\n        return (\n            <div \n                className={this.props.className} \n                id={this.props.id}\n                onDrop={this.drop}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseLeave={this.handleMouseLeave}>\n                    {abilities}\n                \n                <div className=\"button-div\">\n                    <button className=\"roll-button\" onClick={this.rollStats} tabIndex=\"0\">\n                        Roll\n                    </button>\n                </div>\n                <div className=\"button-div select\">\n                    <button className=\"active\" onClick={this.handleClickRollType}>4d6 Drop Lowest</button>\n                    <button onClick={this.handleClickRollType}>3d6</button>\n                    <button onClick={this.handleClickRollType}>Critical Role</button>\n                    <button onClick={this.handleClickRollType}>1d20</button>\n                </div>\n                <div className=\"gradient\" id=\"gradient\"></div>\n            </div>\n        )\n    }\n}\n\nexport default CharacterPanel\n","import React, { Component } from 'react';\nimport CharacterPanel from './CharacterPanel.js'\n\nclass Layout extends Component {\n     \n    render() {\n        return (\n            <div className=\"layout\">\n                 <CharacterPanel className=\"panel\" id=\"panel-1\" appState={this.props.appState}/>\n            </div>\n        );\n    }\n}\n\nexport default Layout;","\nfunction dice(d){\n    \n    var outcome = Math.ceil(Math.random() * d);\n\n    return (outcome);\n}\n\nfunction rollStats(gen){\n    const arrSum = rolls => rolls.reduce((a,b) => a + b, 0)\n    let stats = [];\n\n    if (gen === '3d6'){\n        for (var i = 0; i < 6; i++){\n            stats.push(threeDSix());\n        }\n    }\n    else if (gen === '4d6 Drop Lowest'){\n        for (i = 0; i < 6; i++){\n            stats.push(fourDSixDropLowest());\n        }\n    }\n    else if (gen === 'Critical Role'){\n        let sum = 0;\n        let rolls = []\n        let max_repeats = 0;\n        while (true){\n            for (i = 0; i < 6; i++){\n                stats.push(fourDSixDropLowest());\n                rolls.push(stats[i].sum)\n            }\n            sum = arrSum(rolls);\n\n            if (sum < 70){\n                console.log(\"Sum was \" + sum + \". Re-rolling.\")\n                rolls = [];\n                stats = [];\n            } else {\n                break;\n            }\n            if (max_repeats === 100){\n                console.error(\"Error generating ability scores! \\\n                               This should not happen or should \\\n                               at least be very improbable\")\n                break;\n            }\n            max_repeats++;\n        }\n    }\n    else if (gen === '1d20'){\n        for (var i = 0; i < 6; i++){\n            stats.push(oneDTwenty());\n        }\n    }\n    \n    return stats\n}\n\nfunction threeDSix(){\n    let rolls = [];\n    for (var i = 0; i < 3; i++){\n        rolls.push(dice(6));\n    }\n    const arrSum = rolls => rolls.reduce((a,b) => a + b, 0)\n    const sum = arrSum(rolls);\n\n    return {sum: sum,\n            dice: rolls}\n}\nfunction oneDTwenty(){\n    let rolls = []\n    rolls.push(dice(20));\n\n    return {sum: rolls[0],\n            dice: rolls}\n}\n\nfunction fourDSixDropLowest(){\n    var rolls = [];\n    var min = 6;\n    var min_idx = 0;\n    for (var i = 0; i < 4; i++){\n        const roll = dice(6);\n        if (roll < min) {\n            min = roll;\n            min_idx = i;\n        }\n        rolls.push(roll);\n    }\n    const dropped = rolls.splice(min_idx, 1);\n    const arrSum = rolls => rolls.reduce((a,b) => a + b, 0);\n    const sum = arrSum(rolls);\n    rolls.push(dropped);\n\n    return {sum: sum,\n            dice: rolls}\n}\n\nfunction rollHealth(c, level){\n    //d12\n    var health = [];\n    if ([\"Barbarian\"].includes(c)){\n        health.push(12);\n        for (var i = 0; i < level - 1; i++){\n            health.push(dice(12));\n        }\n    }\n    //d10\n    if ([\"Blood Hunter\", \"Fighter\", \"Paladin\", \"Ranger\"].includes(c)){\n        health.push(10);\n        for (i = 0; i < level - 1; i++){\n            health.push(dice(10));\n        }\n    }\n    //d8\n    if ([\"Artificer\", \"Bard\", \"Cleric\",\n         \"Druid\", \"Monk\", \"Rogue\", \"Warlock\"].includes(c)){\n            health.push(8);\n            for (i = 0; i < level - 1; i++){\n                health.push(dice(8));\n            }\n    }\n    //d6\n    if ([\"Sorcerer\", \"Wizard\"].includes(c)){\n        health.push(6);\n        for (i = 0; i < level - 1; i++){\n            health.push(dice(6));\n        }\n    }\n    const arrSum = rolls => rolls.reduce((a,b) => a + b, 0)\n    const sum = arrSum(health)\n\n    return {sum: sum,\n            dice: health}\n}\nexport default rollStats","import rollStats from './dice.js'\n\nclass AppState  {\n    constructor() {\n        this.rolls = {\n            'str': 15,\n            'dex': 14,\n            'con': 13,\n            'int': 12,\n            'wis': 10,\n            'cha': 8\n        };\n        this.hasChanged = false;\n    }\n\n    getRolls(){\n        return this.rolls;\n    }\n    getRoll(key){\n        return this.rolls[key];\n    }\n    setRoll(key, val){\n        this.rolls[key] = val;\n        this.hasChanged = true;\n    }\n\n    roll(gen){\n        let keys = Object.keys(this.rolls);\n        let rolls = rollStats(gen);\n        for (let i=0; i<rolls.length; i++){\n            this.rolls[keys[i]] = rolls[i].sum;\n        }\n    }\n\n\n}\n\nexport default AppState;\n","import React from 'react';\nimport './App.css';\nimport Layout from './components/Layout.js'\nimport AppState from './AppState.js'\n\nfunction App() {\n  document.title = \"Stat Roller\";\n\n  let appState = new AppState();\n  return (\n      <Layout appState={appState}/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}